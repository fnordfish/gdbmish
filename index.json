{"repository_name":"gdbmish","body":"# GDBMish\n\nConvert crystal data structures into a `gdbm_dump` ASCII format.\n\nCiting [gdbm](https://git.gnu.org.ua/gdbm.git/tree/NOTE-WARNING):\n> Gdbm files have never been `portable' between different operating systems,\n> system architectures, or potentially even different compilers.  Differences\n> in byte order, the size of file offsets, and even structure packing make\n> gdbm files non-portable.\n> \n> Therefore, if you intend to send your database to somebody over the wire,\n> please dump it into a portable format using gdbm_dump and send the resulting\n> file instead. The receiving party will be able to recreate the database from\n> the dump using the gdbm_load command.\n\nGDBMish does that by reimplementing the `gdbm_dump` ASCII format without compiling against `gdbm`\n\n[![GitHub release](https://img.shields.io/github/release/fnordfish/gdbmish.svg)](https://github.com/fnordfish/gdbmish/releases)\n[![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](https://fnordfish.github.io/gdbmish/)\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     gdbmish:\n       github: fnordfish/gdbmish\n   ```\n\n2. Run `shards install`\n\n## Usage\n\nCreate a GDBM Dump:\n\n```crystal\nrequire \"gdbmish\"\n\n# Get dump as String\nstring = Gdbmish::Dump.ascii({\"key1\" => \"value\", \"key2\" => \"value2\"})\n\n# Write directly into File (or any other IO)\nFile.open(\"my_db.dump\", \"w\") do |file|\n  Gdbmish::Dump.ascii({\"key1\" => \"value\", \"key2\" => \"value2\"}, file)\nend\n\n# Provide an original filename\nGdbmish::Dump.ascii(data, file: \"my.db\")\n\n# Provide an original filename and file permissions\nGdbmish::Dump.ascii(data, file: \"my.db\", uid: \"1000\", gid: \"1000\", mode: 0o600)\n\n# Iterate over a data source and push onto an IO\nfileoptions = {file: \"my.db\", uid: \"1000\", user: \"ziggy\", gid: \"1000\", group: \"staff\", mode: 0o600}\nFile.open(\"my.dump\", \"w\") do |file|\n  Gdbmish::Dump::Ascii.new(**fileoptions).dump(io) do |appender|\n    MyDataSource.each do |key, value|\n      appender << {key.to_s, value.to_s}\n    end\n  end\nend\n```\n\nOn the target host, use a tool like `gdbm_load` to convert the dump into a db that works with that hosts gdbm.\n\nRead a GDBM Dump:\n\n```crystal\nreader = Gdbmish::Read::Ascii.new(File.open(\"my.dump\"))\n\n# get meta data\nreader.meta.file # => \"my.db\"\n\n# either iterate over data:\nreader.data do |key, value|\n  puts \"#{key.inspect} => #{value.inspect}\"\nend\n\n# or use the Iterator to transform into Hash\nreader.data.to_h\n```\n\n## Development\n\n* Run specs using `crystal spec`\n* Format files using `crystal tool format`\n\n## Limitations\n\n* Currently only supports the ASCII format and not the Binary format\n\n## Contributing\n\n1. Fork it (<https://github.com/fnordfish/gdbmish/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Robert Schulze](https://github.com/fnordfish) - creator and maintainer\n","program":{"html_id":"gdbmish/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"gdbmish","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"gdbmish/Gdbmish","path":"Gdbmish.html","kind":"module","full_name":"Gdbmish","name":"Gdbmish","abstract":false,"locations":[{"filename":"src/gdbmish.cr","line_number":4,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish.cr#L4"},{"filename":"src/gdbmish/dump.cr","line_number":3,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/dump.cr#L3"},{"filename":"src/gdbmish/read.cr","line_number":3,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/read.cr#L3"}],"repository_name":"gdbmish","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"{{ \"#{(system(\"shards version /home/runner/work/gdbmish/gdbmish/src\")).strip}\" }}"}],"doc":"See `Gdbmish::Dump` for generating dumps from data","summary":"<p>See <code><a href=\"Gdbmish/Dump.html\">Gdbmish::Dump</a></code> for generating dumps from data</p>","types":[{"html_id":"gdbmish/Gdbmish/Dump","path":"Gdbmish/Dump.html","kind":"module","full_name":"Gdbmish::Dump","name":"Dump","abstract":false,"locations":[{"filename":"src/gdbmish/dump.cr","line_number":9,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/dump.cr#L9"}],"repository_name":"gdbmish","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"gdbmish/Gdbmish","kind":"module","full_name":"Gdbmish","name":"Gdbmish"},"doc":"Wrapper for different dump formats, providing various shortcut methods.\nCurrently, there is only `Ascii` mode.\n\nAscii mode optionally dumps file information such as filename, owner, mode.\nSee `Dump::Ascii.new` on how they are used.","summary":"<p>Wrapper for different dump formats, providing various shortcut methods.</p>","class_methods":[{"html_id":"ascii(data:Hash|NamedTuple,io:IO,**fileoptions):IO-class-method","name":"ascii","doc":"Dump *data* as standard ASCII format into *io*.\n\nFor *fileoptions* see `Dump::Ascii.new`\n\nExample:\n```\nGdbmish::Dump.ascii({some: \"data\"}, io)\n```","summary":"<p>Dump <em>data</em> as standard ASCII format into <em>io</em>.</p>","abstract":false,"args":[{"name":"data","external_name":"data","restriction":"Hash | NamedTuple"},{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(data : Hash | NamedTuple, io : IO, **fileoptions) : IO","args_html":"(data : Hash | NamedTuple, io : IO, **fileoptions) : IO","location":{"filename":"src/gdbmish/dump.cr","line_number":147,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/dump.cr#L147"},"def":{"name":"ascii","args":[{"name":"data","external_name":"data","restriction":"Hash | NamedTuple"},{"name":"io","external_name":"io","restriction":"IO"}],"double_splat":{"name":"fileoptions","external_name":"fileoptions","restriction":""},"return_type":"IO","visibility":"Public","body":"(Ascii.new(**fileoptions)).dump(io, data)"}},{"html_id":"ascii(data:Hash|NamedTuple,**fileoptions):String-class-method","name":"ascii","doc":"Dump *data* as standard ASCII format into a new `String`.\n\nFor *fileoptions* see `Dump::Ascii.new`\n\nExample:\n```\ndump = Gdbmish::Dump.ascii({some: \"data\"})\n```","summary":"<p>Dump <em>data</em> as standard ASCII format into a new <code>String</code>.</p>","abstract":false,"args":[{"name":"data","external_name":"data","restriction":"Hash | NamedTuple"}],"args_string":"(data : Hash | NamedTuple, **fileoptions) : String","args_html":"(data : Hash | NamedTuple, **fileoptions) : String","location":{"filename":"src/gdbmish/dump.cr","line_number":159,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/dump.cr#L159"},"def":{"name":"ascii","args":[{"name":"data","external_name":"data","restriction":"Hash | NamedTuple"}],"double_splat":{"name":"fileoptions","external_name":"fileoptions","restriction":""},"return_type":"String","visibility":"Public","body":"String.build do |io|\n  (Ascii.new(**fileoptions)).dump(io, data)\nend"}},{"html_id":"ascii(io:IO,**fileoptions,&block:Ascii::Appender->_):String-class-method","name":"ascii","doc":"Yields a `Ascii::Appender` which consumes key/value `Tuple`s.\nDumps a standard ASCII format into *io*.\n\nFor *fileoptions* see `Dump::Ascii.new`\n\nExample:\n```\ndump = Gdbmish::Dump.ascii(io) do |appender|\n  MyDataSource.each do |key, value|\n    appender << {key.to_s, value.to_s}\n  end\nend\n```","summary":"<p>Yields a <code><a href=\"../Gdbmish/Dump/Ascii/Appender.html\">Ascii::Appender</a></code> which consumes key/value <code>Tuple</code>s.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO, **fileoptions, &block : Ascii::Appender -> _) : String","args_html":"(io : IO, **fileoptions, &block : <a href=\"../Gdbmish/Dump/Ascii/Appender.html\">Ascii::Appender</a> -> _) : String","location":{"filename":"src/gdbmish/dump.cr","line_number":197,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/dump.cr#L197"},"def":{"name":"ascii","args":[{"name":"io","external_name":"io","restriction":"IO"}],"double_splat":{"name":"fileoptions","external_name":"fileoptions","restriction":""},"yields":1,"block_arity":1,"block_arg":{"name":"block","external_name":"block","restriction":"(Ascii::Appender -> _)"},"return_type":"String","visibility":"Public","body":"(Ascii.new(**fileoptions)).dump(io, &block)"}},{"html_id":"ascii(**fileoptions,&block:Ascii::Appender->_):String-class-method","name":"ascii","doc":"Yields a `Ascii::Appender` which consumes key/value `Tuple`s.\nReturns a standard ASCII format as a new `String`.\n\nFor *fileoptions* see `Dump::Ascii.new`\n\nExample:\n```\ndump = Gdbmish::Dump.ascii do |appender|\n  MyDataSource.each do |key, value|\n    appender << {key.to_s, value.to_s}\n  end\nend\n```","summary":"<p>Yields a <code><a href=\"../Gdbmish/Dump/Ascii/Appender.html\">Ascii::Appender</a></code> which consumes key/value <code>Tuple</code>s.</p>","abstract":false,"location":{"filename":"src/gdbmish/dump.cr","line_number":178,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/dump.cr#L178"},"def":{"name":"ascii","double_splat":{"name":"fileoptions","external_name":"fileoptions","restriction":""},"yields":1,"block_arity":1,"block_arg":{"name":"block","external_name":"block","restriction":"(Ascii::Appender -> _)"},"return_type":"String","visibility":"Public","body":"String.build do |io|\n  (Ascii.new(**fileoptions)).dump(io, &block)\nend"}}],"types":[{"html_id":"gdbmish/Gdbmish/Dump/Ascii","path":"Gdbmish/Dump/Ascii.html","kind":"struct","full_name":"Gdbmish::Dump::Ascii","name":"Ascii","abstract":false,"superclass":{"html_id":"gdbmish/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"gdbmish/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"gdbmish/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"gdbmish/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/gdbmish/dump.cr","line_number":10,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/dump.cr#L10"}],"repository_name":"gdbmish","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"GDBM_MAX_DUMP_LINE_LEN","name":"GDBM_MAX_DUMP_LINE_LEN","value":"76","doc":"GDBMs does not split base64 strings at 60 encoded characters (as defined by RFC 2045).\nSee [gdbmdefs.h](https://git.gnu.org.ua/gdbm.git/tree/src/gdbmdefs.h)","summary":"<p>GDBMs does not split base64 strings at 60 encoded characters (as defined by RFC 2045).</p>"}],"namespace":{"html_id":"gdbmish/Gdbmish/Dump","kind":"module","full_name":"Gdbmish::Dump","name":"Dump"},"constructors":[{"html_id":"new(file:String|Nil=nil,uid:String|Nil=nil,user:String|Nil=nil,gid:String|Nil=nil,group:String|Nil=nil,mode:Int32|Nil=nil)-class-method","name":"new","doc":"Builds a new Ascii format dumper\n\nDumping file information is optional.\n* *uid*, *user*, *gid*, *group* and *mode* will only be used when *file* is given\n* *user* will only be used when *uid* is given\n* *group* will only be used when *gid* is given\n\nExample:\n```\nfileoptions = {file: \"test.db\", uid: \"1000\", user: \"ziggy\", gid: \"1000\", group: \"staff\", mode: 0o600}\nFile.open(\"test.dump\", \"w\") do |file|\n  Gdbmish::Dump::Ascii.new(**fileoptions).dump(file) do |appender|\n    MyDataSource.each do |key, value|\n      appender << {key.to_s, value.to_s}\n    end\n  end\nend\n```","summary":"<p>Builds a new Ascii format dumper</p>","abstract":false,"args":[{"name":"file","default_value":"nil","external_name":"file","restriction":"String | ::Nil"},{"name":"uid","default_value":"nil","external_name":"uid","restriction":"String | ::Nil"},{"name":"user","default_value":"nil","external_name":"user","restriction":"String | ::Nil"},{"name":"gid","default_value":"nil","external_name":"gid","restriction":"String | ::Nil"},{"name":"group","default_value":"nil","external_name":"group","restriction":"String | ::Nil"},{"name":"mode","default_value":"nil","external_name":"mode","restriction":"Int32 | ::Nil"}],"args_string":"(file : String | Nil = nil, uid : String | Nil = nil, user : String | Nil = nil, gid : String | Nil = nil, group : String | Nil = nil, mode : Int32 | Nil = nil)","args_html":"(file : String | Nil = <span class=\"n\">nil</span>, uid : String | Nil = <span class=\"n\">nil</span>, user : String | Nil = <span class=\"n\">nil</span>, gid : String | Nil = <span class=\"n\">nil</span>, group : String | Nil = <span class=\"n\">nil</span>, mode : Int32 | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/gdbmish/dump.cr","line_number":71,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/dump.cr#L71"},"def":{"name":"new","args":[{"name":"file","default_value":"nil","external_name":"file","restriction":"String | ::Nil"},{"name":"uid","default_value":"nil","external_name":"uid","restriction":"String | ::Nil"},{"name":"user","default_value":"nil","external_name":"user","restriction":"String | ::Nil"},{"name":"gid","default_value":"nil","external_name":"gid","restriction":"String | ::Nil"},{"name":"group","default_value":"nil","external_name":"group","restriction":"String | ::Nil"},{"name":"mode","default_value":"nil","external_name":"mode","restriction":"Int32 | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(file, uid, user, gid, group, mode)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"dump(io:IO,&:Appender->_):IO-instance-method","name":"dump","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO, & : Appender -> _) : IO","args_html":"(io : IO, & : <a href=\"../../Gdbmish/Dump/Ascii/Appender.html\">Appender</a> -> _) : IO","location":{"filename":"src/gdbmish/dump.cr","line_number":81,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/dump.cr#L81"},"def":{"name":"dump","args":[{"name":"io","external_name":"io","restriction":"IO"}],"yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(Appender -> _)"},"return_type":"IO","visibility":"Public","body":"appender = Appender.new(io)\ndump_header!(io)\nyield appender\ndump_footer!(io, appender.count)\nio\n"}},{"html_id":"dump(io:IO,data:Hash|NamedTuple):IO-instance-method","name":"dump","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"data","external_name":"data","restriction":"Hash | NamedTuple"}],"args_string":"(io : IO, data : Hash | NamedTuple) : IO","args_html":"(io : IO, data : Hash | NamedTuple) : IO","location":{"filename":"src/gdbmish/dump.cr","line_number":91,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/dump.cr#L91"},"def":{"name":"dump","args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"data","external_name":"data","restriction":"Hash | NamedTuple"}],"return_type":"IO","visibility":"Public","body":"appender = Appender.new(io)\ndump_header!(io)\ndata.each do |k, v|\n  appender << {k.to_s, v.to_s}\nend\ndump_footer!(io, appender.count)\nio\n"}}],"types":[{"html_id":"gdbmish/Gdbmish/Dump/Ascii/Appender","path":"Gdbmish/Dump/Ascii/Appender.html","kind":"class","full_name":"Gdbmish::Dump::Ascii::Appender","name":"Appender","abstract":false,"superclass":{"html_id":"gdbmish/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"gdbmish/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"gdbmish/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/gdbmish/dump.cr","line_number":16,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/dump.cr#L16"}],"repository_name":"gdbmish","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"gdbmish/Gdbmish/Dump/Ascii","kind":"struct","full_name":"Gdbmish::Dump::Ascii","name":"Ascii"},"doc":"Appends and counts `#push`ed data as ASCII dump format onto `@io`.\n\nUsers should not use this class stand-alone, as it only represents the\ndata part of an dump, without header and footer. An instance of it gets\nyielded when using `Ascii#dump(io) { |appender| }`","summary":"<p>Appends and counts <code><a href=\"../../../Gdbmish/Dump/Ascii/Appender.html#push%28kv%3ATuple%28String%2CString%29%29%3ANil-instance-method\">#push</a></code>ed data as ASCII dump format onto <code>@io</code>.</p>","constructors":[{"html_id":"new(io:IO)-class-method","name":"new","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/gdbmish/dump.cr","line_number":19,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/dump.cr#L19"},"def":{"name":"new","args":[{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"_ = allocate\n_.initialize(io)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"<<(kv:Tuple(String,String)):Nil-instance-method","name":"<<","doc":"Alias for `push`","summary":"<p>Alias for <code><a href=\"../../../Gdbmish/Dump/Ascii/Appender.html#push%28kv%3ATuple%28String%2CString%29%29%3ANil-instance-method\">#push</a></code></p>","abstract":false,"args":[{"name":"kv","external_name":"kv","restriction":"::Tuple(String, String)"}],"args_string":"(kv : Tuple(String, String)) : Nil","args_html":"(kv : Tuple(String, String)) : Nil","location":{"filename":"src/gdbmish/dump.cr","line_number":30,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/dump.cr#L30"},"def":{"name":"<<","args":[{"name":"kv","external_name":"kv","restriction":"::Tuple(String, String)"}],"return_type":"Nil","visibility":"Public","body":"push(kv)"}},{"html_id":"count:UInt64-instance-method","name":"count","abstract":false,"location":{"filename":"src/gdbmish/dump.cr","line_number":17,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/dump.cr#L17"},"def":{"name":"count","visibility":"Public","body":"@count"}},{"html_id":"push(kv:Tuple(String,String)):Nil-instance-method","name":"push","doc":"Push a `{\"key\", \"value\"}` `Tuple` onto the dump","summary":"<p>Push a <code>{&quot;key&quot;, &quot;value&quot;}</code> <code>Tuple</code> onto the dump</p>","abstract":false,"args":[{"name":"kv","external_name":"kv","restriction":"::Tuple(String, String)"}],"args_string":"(kv : Tuple(String, String)) : Nil","args_html":"(kv : Tuple(String, String)) : Nil","location":{"filename":"src/gdbmish/dump.cr","line_number":24,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/dump.cr#L24"},"def":{"name":"push","args":[{"name":"kv","external_name":"kv","restriction":"::Tuple(String, String)"}],"return_type":"Nil","visibility":"Public","body":"@count = @count + 1\nkv.each do |d|\n  @io << (dump_datum(d))\nend\n"}}]}]}]},{"html_id":"gdbmish/Gdbmish/Read","path":"Gdbmish/Read.html","kind":"module","full_name":"Gdbmish::Read","name":"Read","abstract":false,"locations":[{"filename":"src/gdbmish/read.cr","line_number":7,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/read.cr#L7"}],"repository_name":"gdbmish","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"gdbmish/Gdbmish","kind":"module","full_name":"Gdbmish","name":"Gdbmish"},"doc":"Wrapper for reading GDBM dump files. Currently, only Ascii (aka standard) format is supported.\n\nSee `Read::Ascii` for the main high level interface.","summary":"<p>Wrapper for reading GDBM dump files.</p>","types":[{"html_id":"gdbmish/Gdbmish/Read/Ascii","path":"Gdbmish/Read/Ascii.html","kind":"struct","full_name":"Gdbmish::Read::Ascii","name":"Ascii","abstract":false,"superclass":{"html_id":"gdbmish/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"gdbmish/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"gdbmish/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"gdbmish/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/gdbmish/read.cr","line_number":39,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/read.cr#L39"}],"repository_name":"gdbmish","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"gdbmish/Gdbmish/Read","kind":"module","full_name":"Gdbmish::Read","name":"Read"},"doc":"Main abstraction to read an GDBM Ascii dump file (aka \"standard format\")\n\nExample:\n```\nio = File.open(\"path/to/file.dump\")\nfile = Gdbmish::Read::Ascii.new(io)\n\nfile.data do |key, value|\n  puts \"#{key.inspect} => #{value.inspect}\"\nend\npp file.meta\n\n# Note: your `io`'s file pointer posistion has changed.\nio.pos # => 317\n```\n\nProduces:\n\n```text\n\"some_key\" => \"Some Value\"\n\"otherKey\" => \"Other\\nValue\"\nGdbmish::Read::AsciiMetaData(\n @count=nil,\n @file=\"test.db\",\n @gid=\"1000\",\n @group=\"staff\",\n @mode=384,\n @uid=\"1000\",\n @user=\"ziggy\",\n @version=\"1.1\")\n```","summary":"<p>Main abstraction to read an GDBM Ascii dump file (aka &quot;standard format&quot;)</p>","constructors":[{"html_id":"new(io:IO,load_meta:Bool|Symbol=true)-class-method","name":"new","doc":"Create a new Ascii reader.\n\n- *io* is assumed to point to the beginning of the GDBM dump.\n- *load_meta* can take three values:\n  + `true`: (default) load meta data, but skip `count` for preformance reasons.\n  + `false`: skip loading meta data.\n  + `:count`: load meta data, including `count`.","summary":"<p>Create a new Ascii reader.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"load_meta","default_value":"true","external_name":"load_meta","restriction":"Bool | Symbol"}],"args_string":"(io : IO, load_meta : Bool | Symbol = true)","args_html":"(io : IO, load_meta : Bool | Symbol = <span class=\"n\">true</span>)","location":{"filename":"src/gdbmish/read.cr","line_number":49,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/read.cr#L49"},"def":{"name":"new","args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"load_meta","default_value":"true","external_name":"load_meta","restriction":"Bool | Symbol"}],"visibility":"Public","body":"_ = allocate\n_.initialize(io, load_meta)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"data:AsciiDataIterator-instance-method","name":"data","doc":"Returns an Iterator over key/value pairs.\n\nDepending on the size of the dataset, you might want to read everything into an Array or Hash:\n```\nAscii.new(io).data.to_a # => [{\"some_key\", \"Some Value\"}, {\"otherKey\", \"Other\\nValue\"}]\nAscii.new(io).data.to_h # => {\"some_key\" => \"Some Value\", \"otherKey\" => \"Other\\nValue\"}\n```","summary":"<p>Returns an Iterator over key/value pairs.</p>","abstract":false,"location":{"filename":"src/gdbmish/read.cr","line_number":59,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/read.cr#L59"},"def":{"name":"data","return_type":"AsciiDataIterator","visibility":"Public","body":"load_meta\nAsciiDataIterator.new(@io)\n"}},{"html_id":"data(&block:String,String|Nil->_):Nil-instance-method","name":"data","doc":"Shortcut for `data.each { |key, value| }`","summary":"<p>Shortcut for <code>data.each { |key, value| }</code></p>","abstract":false,"location":{"filename":"src/gdbmish/read.cr","line_number":65,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/read.cr#L65"},"def":{"name":"data","yields":2,"block_arity":2,"block_arg":{"name":"block","external_name":"block","restriction":"(String, String | ::Nil -> _)"},"return_type":"Nil","visibility":"Public","body":"data.each(&block)"}},{"html_id":"meta:AsciiMetaData|Nil-instance-method","name":"meta","doc":"Parses for meta data, depending on the *load_meta* value in `new`","summary":"<p>Parses for meta data, depending on the <em>load_meta</em> value in <code><a href=\"../../Gdbmish/Read/Ascii.html#new%28io%3AIO%2Cload_meta%3ABool%7CSymbol%3Dtrue%29-class-method\">.new</a></code></p>","abstract":false,"location":{"filename":"src/gdbmish/read.cr","line_number":70,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/read.cr#L70"},"def":{"name":"meta","return_type":"AsciiMetaData | ::Nil","visibility":"Public","body":"load_meta"}}]},{"html_id":"gdbmish/Gdbmish/Read/AsciiDataIterator","path":"Gdbmish/Read/AsciiDataIterator.html","kind":"struct","full_name":"Gdbmish::Read::AsciiDataIterator(I)","name":"AsciiDataIterator","abstract":false,"superclass":{"html_id":"gdbmish/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"gdbmish/Iterator/IteratorWrapper","kind":"module","full_name":"Iterator::IteratorWrapper","name":"IteratorWrapper"},{"html_id":"gdbmish/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"gdbmish/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"gdbmish/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"gdbmish/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"gdbmish/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/gdbmish/read.cr","line_number":209,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/read.cr#L209"}],"repository_name":"gdbmish","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"gdbmish/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"gdbmish/Iterator/IteratorWrapper","kind":"module","full_name":"Iterator::IteratorWrapper","name":"IteratorWrapper"}],"namespace":{"html_id":"gdbmish/Gdbmish/Read","kind":"module","full_name":"Gdbmish::Read","name":"Read"},"doc":"Iterates over data and returns decoded key/value pairs.","summary":"<p>Iterates over data and returns decoded key/value pairs.</p>","constructors":[{"html_id":"new(io:I)-class-method","name":"new","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"I"}],"args_string":"(io : I)","args_html":"(io : I)","location":{"filename":"src/gdbmish/read.cr","line_number":213,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/read.cr#L213"},"def":{"name":"new","args":[{"name":"io","external_name":"io","restriction":"I"}],"visibility":"Public","body":"_ = AsciiDataIterator(I).allocate\n_.initialize(io)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"next-instance-method","name":"next","doc":"Returns the next element in this iterator, or `Iterator::Stop::INSTANCE` if there\nare no more elements.","summary":"<p>Returns the next element in this iterator, or <code>Iterator::Stop::INSTANCE</code> if there are no more elements.</p>","abstract":false,"location":{"filename":"src/gdbmish/read.cr","line_number":217,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/read.cr#L217"},"def":{"name":"next","visibility":"Public","body":"k = wrapped_next\nif k.is_a?(Iterator::Stop)\n  return k\nend\nk = Base64.decode_string(k)\nv = wrapped_next\nif v.is_a?(Iterator::Stop)\n  return {k, nil}\nend\nv = Base64.decode_string(v)\n{k, v}\n"}}]},{"html_id":"gdbmish/Gdbmish/Read/AsciiLineIterator","path":"Gdbmish/Read/AsciiLineIterator.html","kind":"struct","full_name":"Gdbmish::Read::AsciiLineIterator(I)","name":"AsciiLineIterator","abstract":false,"superclass":{"html_id":"gdbmish/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"gdbmish/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"gdbmish/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"gdbmish/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"gdbmish/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"gdbmish/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/gdbmish/read.cr","line_number":164,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/read.cr#L164"}],"repository_name":"gdbmish","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"gdbmish/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"}],"namespace":{"html_id":"gdbmish/Gdbmish/Read","kind":"module","full_name":"Gdbmish::Read","name":"Read"},"doc":"Iterates over lines, skiping comments, joining wrapped lines.\nLines are alternating key or value in encodded form.","summary":"<p>Iterates over lines, skiping comments, joining wrapped lines.</p>","constructors":[{"html_id":"new(io:I)-class-method","name":"new","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"I"}],"args_string":"(io : I)","args_html":"(io : I)","location":{"filename":"src/gdbmish/read.cr","line_number":170,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/read.cr#L170"},"def":{"name":"new","args":[{"name":"io","external_name":"io","restriction":"I"}],"visibility":"Public","body":"_ = AsciiLineIterator(I).allocate\n_.initialize(io)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"next:String|Iterator::Stop-instance-method","name":"next","doc":"Returns the next element in this iterator, or `Iterator::Stop::INSTANCE` if there\nare no more elements.","summary":"<p>Returns the next element in this iterator, or <code>Iterator::Stop::INSTANCE</code> if there are no more elements.</p>","abstract":false,"location":{"filename":"src/gdbmish/read.cr","line_number":197,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/read.cr#L197"},"def":{"name":"next","return_type":"String | Iterator::Stop","visibility":"Public","body":"(while line = @io.gets\n  if line.not_nil!.each_byte.first == COMMENT_BYTE\n    next\n  end\n  data = String.build do |str|\n    str << line\n    while !next_is_comment?\n      str << @io.gets\n    end\n  end\n  break data\nend) || stop"}}]},{"html_id":"gdbmish/Gdbmish/Read/AsciiMetaData","path":"Gdbmish/Read/AsciiMetaData.html","kind":"struct","full_name":"Gdbmish::Read::AsciiMetaData","name":"AsciiMetaData","abstract":false,"superclass":{"html_id":"gdbmish/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"gdbmish/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"gdbmish/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"gdbmish/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/gdbmish/read.cr","line_number":82,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/read.cr#L82"}],"repository_name":"gdbmish","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"gdbmish/Gdbmish/Read","kind":"module","full_name":"Gdbmish::Read","name":"Read"},"doc":"Header and footer meta data from a GDBM Ascii dump file.","summary":"<p>Header and footer meta data from a GDBM Ascii dump file.</p>","class_methods":[{"html_id":"parse(io:IO,ignore_count=true)-class-method","name":"parse","doc":"Parse given IO for meta data.\nReads from +io+ until a `\"# End of header\"` line is found (enhancing its `pos`).\nBy default, ignores reading the `count` (indecating the amount of datasets in the file)\nbecause it is written at the end of the file.","summary":"<p>Parse given IO for meta data.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"ignore_count","default_value":"true","external_name":"ignore_count","restriction":""}],"args_string":"(io : IO, ignore_count = true)","args_html":"(io : IO, ignore_count = <span class=\"n\">true</span>)","location":{"filename":"src/gdbmish/read.cr","line_number":100,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/read.cr#L100"},"def":{"name":"parse","args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"ignore_count","default_value":"true","external_name":"ignore_count","restriction":""}],"visibility":"Public","body":"version : String | ::Nil = nil\nfile : String | ::Nil = nil\nuid : String | ::Nil = nil\nuser : String | ::Nil = nil\ngid : String | ::Nil = nil\ngroup : String | ::Nil = nil\nmode : Int32 | ::Nil = nil\ncount : UInt64 | ::Nil = nil\nwhile line = io.gets\n  if line == \"# End of header\"\n    break\n  end\n  if line.starts_with?(\"#:\")\n  else\n    next\n  end\n  (line[2..].split(',')).map(&.split('=')).each do |__arg1|\n    k = __arg1[0]\n    v = __arg1[1]\n    case k\n    when \"version\"\n      version = v\n    when \"file\"\n      file = v\n    when \"uid\"\n      uid = v\n    when \"user\"\n      user = v\n    when \"gid\"\n      gid = v\n    when \"group\"\n      group = v\n    when \"mode\"\n      mode = v.to_i32(base: 8)\n    end\n  end\nend\nif ignore_count\nelse\n  count = read_count(io)\nend\nAsciiMetaData.new(version: version, file: file, uid: uid, user: user, gid: gid, group: group, mode: mode, count: count)\n"}}],"constructors":[{"html_id":"new(version:Nil|String=nil,file:Nil|String=nil,uid:Nil|String=nil,user:Nil|String=nil,gid:Nil|String=nil,group:Nil|String=nil,mode:Int32|Nil=nil,count:UInt64|Nil=nil)-class-method","name":"new","abstract":false,"args":[{"name":"version","default_value":"nil","external_name":"version","restriction":"::Nil | ::String"},{"name":"file","default_value":"nil","external_name":"file","restriction":"::Nil | ::String"},{"name":"uid","default_value":"nil","external_name":"uid","restriction":"::Nil | ::String"},{"name":"user","default_value":"nil","external_name":"user","restriction":"::Nil | ::String"},{"name":"gid","default_value":"nil","external_name":"gid","restriction":"::Nil | ::String"},{"name":"group","default_value":"nil","external_name":"group","restriction":"::Nil | ::String"},{"name":"mode","default_value":"nil","external_name":"mode","restriction":"::Int32 | ::Nil"},{"name":"count","default_value":"nil","external_name":"count","restriction":"::UInt64 | ::Nil"}],"args_string":"(version : Nil | String = nil, file : Nil | String = nil, uid : Nil | String = nil, user : Nil | String = nil, gid : Nil | String = nil, group : Nil | String = nil, mode : Int32 | Nil = nil, count : UInt64 | Nil = nil)","args_html":"(version : Nil | String = <span class=\"n\">nil</span>, file : Nil | String = <span class=\"n\">nil</span>, uid : Nil | String = <span class=\"n\">nil</span>, user : Nil | String = <span class=\"n\">nil</span>, gid : Nil | String = <span class=\"n\">nil</span>, group : Nil | String = <span class=\"n\">nil</span>, mode : Int32 | Nil = <span class=\"n\">nil</span>, count : UInt64 | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/gdbmish/read.cr","line_number":93,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/read.cr#L93"},"def":{"name":"new","args":[{"name":"version","default_value":"nil","external_name":"version","restriction":"::Nil | ::String"},{"name":"file","default_value":"nil","external_name":"file","restriction":"::Nil | ::String"},{"name":"uid","default_value":"nil","external_name":"uid","restriction":"::Nil | ::String"},{"name":"user","default_value":"nil","external_name":"user","restriction":"::Nil | ::String"},{"name":"gid","default_value":"nil","external_name":"gid","restriction":"::Nil | ::String"},{"name":"group","default_value":"nil","external_name":"group","restriction":"::Nil | ::String"},{"name":"mode","default_value":"nil","external_name":"mode","restriction":"::Int32 | ::Nil"},{"name":"count","default_value":"nil","external_name":"count","restriction":"::UInt64 | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(version, file, uid, user, gid, group, mode, count)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"count:UInt64|Nil-instance-method","name":"count","abstract":false,"location":{"filename":"src/gdbmish/read.cr","line_number":91,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/read.cr#L91"},"def":{"name":"count","return_type":"UInt64 | ::Nil","visibility":"Public","body":"@count"}},{"html_id":"file:String|Nil-instance-method","name":"file","abstract":false,"location":{"filename":"src/gdbmish/read.cr","line_number":84,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/read.cr#L84"},"def":{"name":"file","return_type":"String | ::Nil","visibility":"Public","body":"@file"}},{"html_id":"gid:String|Nil-instance-method","name":"gid","abstract":false,"location":{"filename":"src/gdbmish/read.cr","line_number":87,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/read.cr#L87"},"def":{"name":"gid","return_type":"String | ::Nil","visibility":"Public","body":"@gid"}},{"html_id":"group:String|Nil-instance-method","name":"group","abstract":false,"location":{"filename":"src/gdbmish/read.cr","line_number":88,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/read.cr#L88"},"def":{"name":"group","return_type":"String | ::Nil","visibility":"Public","body":"@group"}},{"html_id":"mode:Int32|Nil-instance-method","name":"mode","doc":"octal unix file mode","summary":"<p>octal unix file mode</p>","abstract":false,"location":{"filename":"src/gdbmish/read.cr","line_number":90,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/read.cr#L90"},"def":{"name":"mode","return_type":"Int32 | ::Nil","visibility":"Public","body":"@mode"}},{"html_id":"uid:String|Nil-instance-method","name":"uid","abstract":false,"location":{"filename":"src/gdbmish/read.cr","line_number":85,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/read.cr#L85"},"def":{"name":"uid","return_type":"String | ::Nil","visibility":"Public","body":"@uid"}},{"html_id":"user:String|Nil-instance-method","name":"user","abstract":false,"location":{"filename":"src/gdbmish/read.cr","line_number":86,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/read.cr#L86"},"def":{"name":"user","return_type":"String | ::Nil","visibility":"Public","body":"@user"}},{"html_id":"version:String|Nil-instance-method","name":"version","abstract":false,"location":{"filename":"src/gdbmish/read.cr","line_number":83,"url":"https://github.com/fnordfish/gdbmish/blob/0feb6121e5edee448f5fd9d65bb1776143b8f18f/src/gdbmish/read.cr#L83"},"def":{"name":"version","return_type":"String | ::Nil","visibility":"Public","body":"@version"}}]}]}]}]}}