{"repository_name":"gdbmish","body":"# GDBMish\n\nConvert crystal data structures into a `gdpm_dump` ASCII format.\n\nCiting [gdbm](https://git.gnu.org.ua/gdbm.git/tree/NOTE-WARNING):\n> Gdbm files have never been `portable' between different operating systems,\n> system architectures, or potentially even different compilers.  Differences\n> in byte order, the size of file offsets, and even structure packing make\n> gdbm files non-portable.\n> \n> Therefore, if you intend to send your database to somebody over the wire,\n> please dump it into a portable format using gdbm_dump and send the resulting\n> file instead. The receiving party will be able to recreate the database from\n> the dump using the gdbm_load command.\n\nGDBMish does that by reimplementing the `gdpm_dump` ASCII format without compiling against `gdbm`\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     gdbmish:\n       github: fnordfish/gdbmish\n   ```\n\n2. Run `shards install`\n\n## Usage\n\n```crystal\nrequire \"gdbmish\"\n```\n\n```crystal\n# Get dump as String\nstring = Gdbmish::Dump.ascii({\"key1\" => \"value\", \"key2\" => value})\n\n# Write directly into File (or any other IO)\nFile.open(\"my_db.dump\", \"w\") do |file|\n  Gdbmish::Dump.ascii({\"key1\" => \"value\", \"key2\" => value}, file)\nend\n\n# Provide an original filename\nGdbmish::Dump.ascii(data, file: \"my.db\")\n\n# Provide an original filename and file permissions\nGdbmish::Dump.ascii(data, file: \"my.db\", uid: \"1000\", gid: \"1000\", mode: 0o600)\n```\n\n## Development\n\nTODO: Write development instructions here\n\n## Limitations\n\n* Currently only supports the ASCII format and not the Binary format\n* Currently requires a `Hash` or `NamedTuple` with `String` keys and values\n  + it would be nice to provide a \"consumer\" style API for dumping larger data sets\n* Currently only supports creating a dump\n  + it would be nice to also read dumps \n\n## Contributing\n\n1. Fork it (<https://github.com/fnordfish/gdbmish/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Robert Schulze](https://github.com/fnordfish) - creator and maintainer\n","program":{"html_id":"gdbmish/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"gdbmish","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"gdbmish/Gdbmish","path":"Gdbmish.html","kind":"module","full_name":"Gdbmish","name":"Gdbmish","abstract":false,"locations":[{"filename":"src/gdbmish.cr","line_number":4,"url":"https://github.com/fnordfish/gdbmish/blob/a7ff74667173a1060b3bfba33fb2e0e71a4bd8cd/src/gdbmish.cr#L4"},{"filename":"src/gdbmish/dump.cr","line_number":3,"url":"https://github.com/fnordfish/gdbmish/blob/a7ff74667173a1060b3bfba33fb2e0e71a4bd8cd/src/gdbmish/dump.cr#L3"}],"repository_name":"gdbmish","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"{{ \"#{(system(\"shards version\")).strip}\" }}"}],"doc":"See `Gdbmish::Dump` for generating dumps from data","summary":"<p>See <code><a href=\"Gdbmish/Dump.html\">Gdbmish::Dump</a></code> for generating dumps from data</p>","types":[{"html_id":"gdbmish/Gdbmish/Dump","path":"Gdbmish/Dump.html","kind":"module","full_name":"Gdbmish::Dump","name":"Dump","abstract":false,"locations":[{"filename":"src/gdbmish/dump.cr","line_number":4,"url":"https://github.com/fnordfish/gdbmish/blob/a7ff74667173a1060b3bfba33fb2e0e71a4bd8cd/src/gdbmish/dump.cr#L4"}],"repository_name":"gdbmish","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"GDBM_MAX_DUMP_LINE_LEN","name":"GDBM_MAX_DUMP_LINE_LEN","value":"76","doc":"GDBMs does not split base64 strings at 60 encoded characters (as defined by RFC 2045).\nSee [gdbmdefs.h](https://git.gnu.org.ua/gdbm.git/tree/src/gdbmdefs.h)","summary":"<p>GDBMs does not split base64 strings at 60 encoded characters (as defined by RFC 2045).</p>"}],"namespace":{"html_id":"gdbmish/Gdbmish","kind":"module","full_name":"Gdbmish","name":"Gdbmish"},"class_methods":[{"html_id":"ascii(data:Hash|NamedTuple,io:IO,file:String?=nil,uid:String?=nil,user:String?=nil,gid:String?=nil,group:String?=nil,mode:Int32?=nil)-class-method","name":"ascii","doc":"Dump the given data in standard ASCII format into a provided `IO`.\n\nDumping file information is optional.\n* *uid*, *user*, *gid*, *group* and *mode* will only be used when *file* is given\n* *user* will only be used when *uid* is given\n* *group* will only be used when *gid* is given","summary":"<p>Dump the given data in standard ASCII format into a provided <code>IO</code>.</p>","abstract":false,"args":[{"name":"data","external_name":"data","restriction":"Hash | NamedTuple"},{"name":"io","external_name":"io","restriction":"IO"},{"name":"file","default_value":"nil","external_name":"file","restriction":"String | ::Nil"},{"name":"uid","default_value":"nil","external_name":"uid","restriction":"String | ::Nil"},{"name":"user","default_value":"nil","external_name":"user","restriction":"String | ::Nil"},{"name":"gid","default_value":"nil","external_name":"gid","restriction":"String | ::Nil"},{"name":"group","default_value":"nil","external_name":"group","restriction":"String | ::Nil"},{"name":"mode","default_value":"nil","external_name":"mode","restriction":"Int32 | ::Nil"}],"args_string":"(data : Hash | NamedTuple, io : IO, file : String? = nil, uid : String? = nil, user : String? = nil, gid : String? = nil, group : String? = nil, mode : Int32? = nil)","args_html":"(data : Hash | NamedTuple, io : IO, file : String? = <span class=\"n\">nil</span>, uid : String? = <span class=\"n\">nil</span>, user : String? = <span class=\"n\">nil</span>, gid : String? = <span class=\"n\">nil</span>, group : String? = <span class=\"n\">nil</span>, mode : Int32? = <span class=\"n\">nil</span>)","location":{"filename":"src/gdbmish/dump.cr","line_number":15,"url":"https://github.com/fnordfish/gdbmish/blob/a7ff74667173a1060b3bfba33fb2e0e71a4bd8cd/src/gdbmish/dump.cr#L15"},"def":{"name":"ascii","args":[{"name":"data","external_name":"data","restriction":"Hash | NamedTuple"},{"name":"io","external_name":"io","restriction":"IO"},{"name":"file","default_value":"nil","external_name":"file","restriction":"String | ::Nil"},{"name":"uid","default_value":"nil","external_name":"uid","restriction":"String | ::Nil"},{"name":"user","default_value":"nil","external_name":"user","restriction":"String | ::Nil"},{"name":"gid","default_value":"nil","external_name":"gid","restriction":"String | ::Nil"},{"name":"group","default_value":"nil","external_name":"group","restriction":"String | ::Nil"},{"name":"mode","default_value":"nil","external_name":"mode","restriction":"Int32 | ::Nil"}],"visibility":"Public","body":"io.printf(\"# GDBM dump file created by GDBMish version %s on %s\\n\", Gdbmish::VERSION, Time.local.to_rfc2822)\nio.puts(\"#:version=1.1\")\nif file\n  io.printf(\"#:file=%s\\n\", file)\n  l = [] of String\n  if uid\n    l << (sprintf(\"uid=%d\", uid))\n    if user\n      l << (sprintf(\"user=%s\", user))\n    end\n  end\n  if gid\n    l << (sprintf(\"gid=%d\", gid))\n    if group\n      l << (sprintf(\"group=%s\", group))\n    end\n  end\n  if mode\n    l << (sprintf(\"mode=%03o\", mode & 511))\n  end\n  if l.empty?\n  else\n    io << \"#:\"\n    io.puts(l.join(\",\"))\n  end\nend\nio.puts(\"#:format=standard\")\nio.puts(\"# End of header\")\ndata.each do |k, v|\n  io << (ascii_dump_datum(k.to_s))\n  io << (ascii_dump_datum(v.to_s))\nend\nio.printf(\"#:count=%d\\n\", data.size)\nio.puts(\"# End of data\")\n"}},{"html_id":"ascii(data:Hash|NamedTuple,**options):String-class-method","name":"ascii","doc":"Like `ascii` but builds a new `String`","summary":"<p>Like <code><a href=\"../Gdbmish/Dump.html#ascii%28data%3AHash%7CNamedTuple%2Cio%3AIO%2Cfile%3AString%3F%3Dnil%2Cuid%3AString%3F%3Dnil%2Cuser%3AString%3F%3Dnil%2Cgid%3AString%3F%3Dnil%2Cgroup%3AString%3F%3Dnil%2Cmode%3AInt32%3F%3Dnil%29-class-method\">.ascii</a></code> but builds a new <code>String</code></p>","abstract":false,"args":[{"name":"data","external_name":"data","restriction":"Hash | NamedTuple"}],"args_string":"(data : Hash | NamedTuple, **options) : String","args_html":"(data : Hash | NamedTuple, **options) : String","location":{"filename":"src/gdbmish/dump.cr","line_number":63,"url":"https://github.com/fnordfish/gdbmish/blob/a7ff74667173a1060b3bfba33fb2e0e71a4bd8cd/src/gdbmish/dump.cr#L63"},"def":{"name":"ascii","args":[{"name":"data","external_name":"data","restriction":"Hash | NamedTuple"}],"double_splat":{"name":"options","external_name":"options","restriction":""},"return_type":"String","visibility":"Public","body":"String.build do |str|\n  self.ascii(data, str, **options)\nend"}}]}]}]}}